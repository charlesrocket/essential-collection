---

name: molecule

'on':
  pull_request:
  push:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    working-directory: 'git_role'

jobs:
  vagrant:
    runs-on: macos-12
    strategy:
      matrix:
        distro:
          - freebsd13
          - netbsd9
          - openbsd7

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3
        with:
          path: 'git_role'

      - name: Set up Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: '**/requirements-dev.txt'
          check-latest: true

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      - name: Cache Vagrant boxes
        uses: actions/cache@v3
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ matrix.distro }}
          restore-keys: |
            ${{ runner.os }}-vagrant-${{ matrix.distro }}

      - name: Run Molecule
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - alpine
          - debian
          - fedora
          - opensuse
          - rocky
          - ubuntu

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3
        with:
          path: 'git_role'

      - name: Set up Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: '**/requirements-dev.txt'
          check-latest: true

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Molecule
        run: molecule test -s linux
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  release:
    needs: [docker, vagrant]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Release
        uses: robertdebock/galaxy-action@1.2.1
        with:
          galaxy_api_key: ${{ secrets.GALAXY_API_KEY }}
          git_branch: master
